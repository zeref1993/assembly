;THIS PROGRAM DISPLAYS A CLOCK BY SIMULATING A SEVEN SEGMENT DISPLAY
;AUTHOR: A JANARDHAN REDDY
;DATE: 6/03/12

NAME CLOCK
.STACK 100
.MODEL SMALL

MY_DATA_SEGMENT SEGMENT

  NUM DB 1,1,1,1,1,1,0
	    DB 0,1,1,0,0,0,0
	    DB 1,1,0,1,1,0,1
	    DB 1,1,1,1,0,0,1
	    DB 0,1,1,0,0,1,1
	    DB 1,0,1,1,0,1,1
	    DB 1,0,1,1,1,1,1
	    DB 1,1,1,0,0,0,0
	    DB 1,1,1,1,1,1,1
	    DB 1,1,1,1,0,1,1
	HOUR1 DB 0
	HOUR2 DB 0
	MIN1 DB 0
	MIN2 DB 0
	COLOR DB 0
	TEMP DB 0
	ROW DW 0
	COL DW 0
	INCT DB 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;                 LIST OF MACROS                ;;;;;;;;;
  
  SET_CURSOR MACRO ROW, COL
	PUSH AX
	PUSH BX
	PUSH DX
	
	MOV BH, 0
        MOV DH, ROW
        MOV DL, COL
        MOV AH, 02H
        INT 10H
	
	POP DX
	POP BX
	POP AX
  ENDM
  
  SETRCC MACRO R, C, CR
  MOV ROW,R
  MOV COL, C
  MOV COLOR, CR
  ENDM
  
MY_DATA_SEGMENT ENDS



MY_CODE_SEGMENT SEGMENT
	ASSUME CS:MY_CODE_SEGMENT, DS:MY_DATA_SEGMENT
START:

	MOV AX, MY_DATA_SEGMENT
	MOV DS, AX

	CALL SET_VIDEO_MODE
	CALL COLOR_SCREEN
	
	CALL START_CLOCK
  
  MOV AH, 01H
  INT 21H

	MOV AX, 4C00H
	INT 21H
  
  
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;                 LIST OF PROCEDURES                 ;;;;;;;;;

SET_VIDEO_MODE PROC NEAR
	PUSH AX
	
	MOV AX, 13H
	INT 10H
	
	POP AX
	RET 
SET_VIDEO_MODE ENDP
  
COLOR_SCREEN PROC NEAR
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	MOV AX, 0600H
	MOV BH, 3BH
	MOV CX, 0H
	MOV DX, 184FH
	INT 10H
		
	POP DX
	POP CX
	POP BX
	POP AX
  RET
COLOR_SCREEN ENDP

DRAW_DIGITH1 PROC NEAR
  PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	MOV AH, 0
	MOV AL, HOUR1
	MOV BX, 7
	MUL BL
	MOV BX, AX

  SETRCC 20, 70, 0CH
	CMP NUM[BX], 0
	JNE DRAWA
	SETRCC 20, 70, 3BH
	DRAWA:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 20, 100, 0CH
	CMP NUM[BX], 0
	JNE DRAWB
	SETRCC 20, 100, 3BH
	DRAWB:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 100, 0CH
	CMP NUM[BX], 0
	JNE DRAWC
	SETRCC 50, 100, 3BH
	DRAWC:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 80, 70, 0CH
	CMP NUM[BX], 0
	JNE DRAWD
	SETRCC 80, 70, 3BH
	DRAWD:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 50, 70, 0CH
	CMP NUM[BX], 0
	JNE DRAWE
	SETRCC 50, 70, 3BH
	DRAWE:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 20, 70, 0CH
	CMP NUM[BX], 0
	JNE DRAWF
	SETRCC 20, 70, 3BH
	DRAWF:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 70, 0CH
	CMP NUM[BX], 0
	JNE DRAWG
	SETRCC 50, 70, 3BH
	DRAWG:
	CALL DRAW_HLINE 
	INC BX
	
	
	
	
	POP DX
	POP CX
	POP BX
	POP AX
  RET
DRAW_DIGITH1 ENDP

DRAW_DIGITH2 PROC NEAR
  PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	MOV AH, 0
	MOV AL, HOUR2
	MOV BX, 7
	MUL BL
	MOV BX, AX

  SETRCC 20, 110, 0CH
	CMP NUM[BX], 0
	JNE ADRAWA
	SETRCC 20, 110, 3BH
	ADRAWA:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 20, 140, 0CH
	CMP NUM[BX], 0
	JNE ADRAWB
	SETRCC 20, 140, 3BH
	ADRAWB:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 140, 0CH
	CMP NUM[BX], 0
	JNE ADRAWC
	SETRCC 50, 140, 3BH
	ADRAWC:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 80, 110, 0CH
	CMP NUM[BX], 0
	JNE ADRAWD
	SETRCC 80, 110, 3BH
	ADRAWD:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 50, 110, 0CH
	CMP NUM[BX], 0
	JNE ADRAWE
	SETRCC 50, 110, 3BH
	ADRAWE:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 20, 110, 0CH
	CMP NUM[BX], 0
	JNE ADRAWF
	SETRCC 20, 110, 3BH
	ADRAWF:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 110, 0CH
	CMP NUM[BX], 0
	JNE ADRAWG
	SETRCC 50, 110, 3BH
	ADRAWG:
	CALL DRAW_HLINE 
	INC BX
	
	
	
	
	POP DX
	POP CX
	POP BX
	POP AX
  RET
DRAW_DIGITH2 ENDP

DRAW_DIGITM1 PROC NEAR
  PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

    
	MOV AH, 0
	MOV AL, MIN1
	MOV BX, 7
	MUL BL
	MOV BX, AX
	

  SETRCC 20, 150, 0CH
	CMP NUM[BX], 0
	JNE QDRAWA
	SETRCC 20, 150, 3BH
	QDRAWA:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 20, 180, 0CH
	CMP NUM[BX], 0
	JNE QDRAWB
	SETRCC 20, 180, 3BH
	QDRAWB:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 180, 0CH
	CMP NUM[BX], 0
	JNE QDRAWC
	SETRCC 50, 180, 3BH
	QDRAWC:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 80, 150, 0CH
	CMP NUM[BX], 0
	JNE QDRAWD
	SETRCC 80, 150, 3BH
	QDRAWD:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 50, 150, 0CH
	CMP NUM[BX], 0
	JNE QDRAWE
	SETRCC 50, 150, 3BH
	QDRAWE:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 20, 150, 0CH
	CMP NUM[BX], 0
	JNE QDRAWF
	SETRCC 20, 150, 3BH
	QDRAWF:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 150, 0CH
	CMP NUM[BX], 0
	JNE QDRAWG
	SETRCC 50, 150, 3BH
	QDRAWG:
	CALL DRAW_HLINE 
	INC BX
	
	
	
	
	POP DX
	POP CX
	POP BX
	POP AX
  RET
DRAW_DIGITM1 ENDP

DRAW_DIGITM2 PROC NEAR
  PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	MOV AH, 0
	MOV AL, MIN2
	MOV BX, 7
	MUL BL
	MOV BX, AX

  SETRCC 20, 190, 0CH
	CMP NUM[BX], 0
	JNE WDRAWA
	SETRCC 20, 190, 3BH
	WDRAWA:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 20, 220, 0CH
	CMP NUM[BX], 0
	JNE WDRAWB
	SETRCC 20, 220, 3BH
	WDRAWB:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 220, 0CH
	CMP NUM[BX], 0
	JNE WDRAWC
	SETRCC 50, 220, 3BH
	WDRAWC:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 80, 190, 0CH
	CMP NUM[BX], 0
	JNE WDRAWD
	SETRCC 80, 190, 3BH
	WDRAWD:
	CALL DRAW_HLINE 
	INC BX
	
	SETRCC 50, 190, 0CH
	CMP NUM[BX], 0
	JNE WDRAWE
	SETRCC 50, 190, 3BH
	WDRAWE:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 20, 190, 0CH
	CMP NUM[BX], 0
	JNE WDRAWF
	SETRCC 20, 190, 3BH
	WDRAWF:
	CALL DRAW_VLINE 
	INC BX
	
	SETRCC 50, 190, 0CH
	CMP NUM[BX], 0
	JNE WDRAWG
	SETRCC 50, 190, 3BH
	WDRAWG:
	CALL DRAW_HLINE 
	INC BX
	
	
	
	
	POP DX
	POP CX
	POP BX
	POP AX
  RET
DRAW_DIGITM2 ENDP

DRAW_HLINE PROC NEAR
		PUSH AX
		PUSH BX
		PUSH CX
		PUSH DX
		
		MOV BX, COL
		MOV TEMP, 1
		HDRAW:
		  MOV AL, COLOR
			MOV CX, BX
			MOV DX, ROW
			MOV AH, 0CH
			INT 10H
			INC BX
			INC TEMP
			CMP TEMP, 30
			JLE HDRAW
		
		POP DX
		POP CX
		POP BX
		POP AX
		RET
DRAW_HLINE ENDP
	
	
	DRAW_VLINE PROC NEAR
		PUSH AX
		PUSH BX
		PUSH CX
		PUSH DX
		
		MOV BX, ROW
		MOV TEMP, 1
		VDRAW:
			MOV AL, COLOR
			MOV CX, COL
			MOV DX, BX
			MOV AH, 0CH
			INT 10H
			INC BX
			INC TEMP
			CMP TEMP, 30
			JLE VDRAW
		
		POP DX
		POP CX
		POP BX
		POP AX
		RET
	DRAW_VLINE ENDP
	
INC_CLOCK PROC NEAR
    PUSH AX
		PUSH BX
		PUSH CX
		PUSH DX
		
		INC MIN2
		CMP MIN2, 10
		JL DON
    MOV MIN2, 0
    INC MIN1
    CMP MIN1, 10
    JL DON
    MOV MIN1, 0
    INC HOUR2
    CMP HOUR2, 10
    JL DON
    MOV HOUR2, 0
    INC HOUR1
    CMP HOUR1, 6
    JL DON
    MOV HOUR1, 0	  

    DON:
		POP DX
		POP CX
		POP BX
		POP AX
		RET
INC_CLOCK ENDP

START_CLOCK PROC NEAR
    PUSH AX
		PUSH BX
		PUSH CX
		PUSH DX
		
		MOV HOUR1, 0
		MOV HOUR2, 0
		MOV MIN1, 0
		MOV MIN2, 0
		
		CLOCK:
		CALL DRAW_DIGITH1
	  CALL DRAW_DIGITH2
	  CALL DRAW_DIGITM1
	  CALL DRAW_DIGITM2
		MOV CX, 10000
		TIMER:
		MOV AX, 10
		TIMER2:
		NOP
		DEC AX
		CMP AX, 0
		JA TIMER2
		LOOP TIMER
		CALL INC_CLOCK
		JMP CLOCK
		
    POP DX
		POP CX
		POP BX
		POP AX
		RET
START_CLOCK ENDP

MY_CODE_SEGMENT ENDS
END START
